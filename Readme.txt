توصيف الحالة: تم التعبير عن اللعبة بواسطة object من صف Board بحيث تعتبر كل حالة (حركة) object جديد 
و يتكون ال Board من مصفوفة ثنائية تتألف كل خلية منها من piece object و الذي يعبر عن القطع الخاصة باللعبة 


حالة البداية: و هي الboard الرئيسي و الذي يتم تعريفه بحسب رقم المرحلة المدخلة و هو أيضا object من صف Board

حالة النهاية: و هي الحالة المراد الوصول أليها و التي تتم بعد القيام بعدة حركات معينة على الحالة البدائية و ينتج عند الوصول إليها انتهاء اللعبة و ذلك بسبب تحقق تابع checkwin المسؤول عن معرفة إذا تم الفوز أو لا

طريقة عمل الكود: يتم إدخال رقم المرحلة و طريقة اللعب من قبل المستخدم و ذلك يتم في Game class حيث يتم تعريف المرحلة من صف stage حيث يأخد الرقم و يعيد معلومات المرحلة المطلوبة
و يتم إرسال المعلومات إلى صف Board لتعريف الحالة الابتدائية حيث يتم تعريف كل من طول و عرض الرقعة و عدد الحركات المسموحة و أماكن القطع المغناطيسية و المعدنية و الدوائر البيضاء من أجل إنشاء الرقعة
حيث أن القطع هي عبارة عن piece objects بحيث تعرف كل من نوع القطعة و حالة القطعة الابتدائية(تستخدم عند التحريك لإعادة القطعة لحالتها الأصلية)
ثم يتم إرسال ال Board إلى صف Game logic من أجل تطبيق تعليمات الحركة بحيث يتم أخد احداثيات القطعة المراد تحريكها من اللاعب 
ثم إحداثيات المكان المراد وضعها فيه عن طريق تابع inputGame ثم التحقق من إمكانية تحريك تلك القطعة عن طريق تابع in grid للتحقق من ان المكان داخل الرقعة و تابع isblank للتحقق من أن المكان الجديد فارغ
ثم يتم استدعاء أحد التابعين pmoves أو rmoves و ذلك حسب نوع المغناطيس الذي تم اختياره حيث يطبق التابعان السابقان منطق تحريك المغناطيس في اللعبة 
و يستمر التحريك حتى فوز اللعبة (تحقق تابع checkwin) و الذي يعبر عنه بانتهاء الأماكن البيضاء أي أن جميع القطع(مغانط أو قطع معدنية) تقع في مكانها المناسب و عندها تطبع عبارة you won و تنتهي اللعبة 


Bfs:و هو تابع داخل Algorithms class و لتي يتم استدعاؤها داخل Game class في حال قام اللاعب بإدخال طريقة اللعب bfs فيتم تعريف مصفوفة visited و ذلك لضمان عدم تكرار الحالات(Boards) 
و يتم تعريف queue و ذلك لتطيق خوارزمية bfs كما بتم تعيف Gamelogic و ذل لاستخام توابع التحقق و الحركة السابقة 
حيث أن تابع bfs عودي و يأخذ الحالة (Board)و يبدأ بالتحقق من انهاء اللعبة ثم يدخل تلك الحالة إلى مصفوفة visited 
ثم يمر بحلقتين for و ذلك للعثور على القطعة المغناطيسية لتحريكها ثم يمر بحلقتين for اخرتين من أجل المرور على كل الحالات الممكنة
و إدخالها إلى ال queue ثم يأخذ أول حالة من ال queue و يعيد استدعاء التابع عندها و تستمر العملية حتى إيجاد الحل

dfs: و هو تابع يشبه تابع ال Bfs ولكن يختلف بعدة أشياء حيث أنه يقوم حساب عدد الحركات المسموحة و ذلك من أجل وقف الاستدعاءات ف حال تجاز الحد المسموح و يتم ذلك بعد فحص حالة الفوز
و بدل ادخال الstate إلى ال queue يقوم بالإستدعاء مباشرة بعد كل حركة جديدة ناتجة عن تحريك سابق (أي يبدأ من أب حتى انهاء أبناءه أو انتهاء العدد المسموح ثم ينتقل إلى الإخوة ) 
